{"version":3,"sources":["MySchedule.js","ConnectedServers.js","MyCharacters.js","MyStoryIdeas.js","MyAvailability.js","App.js","serviceWorker.js","index.js"],"names":["MySchedule","state","calendarRef","React","createRef","style","type","checked","value","this","calendarView","onChange","e","newView","target","current","getApi","changeView","setState","ref","defaultView","nowIndicator","plugins","dayGridPlugin","timeGridPlugin","events","title","date","Component","ConnectedServers","listPlugin","MyCharacters","MyStoryIdeas","MyAvailability","slotDuration","selectable","interactionPlugin","App","setSection","bind","section","preventDefault","displayedSection","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.144dd91b.chunk.js","sourcesContent":["import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid';\n\nimport './main.scss' // webpack must be configured to do this\n\nexport default class MySchedule extends React.Component {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\t\"calendarView\": \"dayGridMonth\"\n\t\t}\n\t\tthis.calendarRef = React.createRef()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>My Schedule</h1>\n\t\t\t\t<div style={{ \"display\": \"flex\", \"justifyContent\": \"space-around\" }}>\n\t\t\t\t\t<div style={{ \"width\": \"25%\" }}>\n\t\t\t\t\t\t<h2>My Servers</h2>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li><input type=\"checkbox\" /> Server 1</li>\n\t\t\t\t\t\t\t<li><input type=\"checkbox\" /> Server 2</li>\n\t\t\t\t\t\t\t<li><input type=\"checkbox\" /> Server 3</li>\n\t\t\t\t\t\t\t<li><input type=\"checkbox\" checked /> Server 4</li>\n\t\t\t\t\t\t\t<li><input type=\"checkbox\" /> Server 5</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ \"width\": \"50%\" }}>\n\t\t\t\t\t\t<select value={this.state.calendarView} onChange={(e) => {\n\t\t\t\t\t\t\tlet newView = e.target.value\n\t\t\t\t\t\t\tlet calendarApi = this.calendarRef.current.getApi()\n\t\t\t\t\t\t\tcalendarApi.changeView(newView)\n\t\t\t\t\t\t\tthis.setState({ \"calendarView\": newView })\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<option value=\"dayGridMonth\">Monthly</option>\n\t\t\t\t\t\t\t<option value=\"timeGridWeek\">Weekly</option>\n\t\t\t\t\t\t\t<option value=\"timeGrid\">Daily</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<FullCalendar\n\t\t\t\t\t\t\tref={this.calendarRef}\n\t\t\t\t\t\t\tdefaultView=\"dayGridMonth\"\n\t\t\t\t\t\t\tnowIndicator={true}\n\t\t\t\t\t\t\tplugins={[\n\t\t\t\t\t\t\t\tdayGridPlugin,\n\t\t\t\t\t\t\t\ttimeGridPlugin,\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tevents={[\n\t\t\t\t\t\t\t\t{ title: 'event 1', date: '2019-08-24' },\n\t\t\t\t\t\t\t\t{ title: 'event 2', date: '2019-08-26' }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport listPlugin from '@fullcalendar/list'\n\nimport './main.scss' // webpack must be configured to do this\n\nexport default class ConnectedServers extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Connected Servers</h1>\n\t\t\t\t<strong>Players with events this week</strong>\n\t\t\t\t<div style={{ \"display\": \"flex\", \"justifyContent\": \"space-around\" }}>\n\t\t\t\t\t<div style={{ \"width\": \"25%\" }}>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li><input type=\"checkbox\" /> Server 1</li>\n\t\t\t\t\t\t\t<li><input type=\"checkbox\" /> Server 2</li>\n\t\t\t\t\t\t\t<li><input type=\"checkbox\" /> Server 3</li>\n\t\t\t\t\t\t\t<li><input type=\"checkbox\" checked /> Server 4</li>\n\t\t\t\t\t\t\t<li><input type=\"checkbox\" /> Server 5</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ \"width\": \"50%\" }}>\n\t\t\t\t\t\t<FullCalendar \n\t\t\t\t\t\tdefaultView=\"listWeek\" \n\t\t\t\t\t\tplugins={[listPlugin]}\n\t\t\t\t\t\tevents={[\n\t\t\t\t\t\t\t\t{ title: 'Janice - Mjorln eats', date: '2019-08-22' },\n\t\t\t\t\t\t\t\t{ title: 'Craig - Jinks buys a car', date: '2019-08-24' }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ul style={{\"display\":\"flex\"}}>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tJanice<br />\n\t\t\t\t\t\t\t\tCharacters\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>Xargothrax</li>\n\t\t\t\t\t\t\t\t\t<li>Mjorln</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tCraig<br />\n\t\t\t\t\t\t\t\tCharacters\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>Ttttts</li>\n\t\t\t\t\t\t\t\t\t<li>Jinks</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\n\nexport default class MyCharacters extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>My Characters</h1>\n\t\t\t<div style={{\"display\":\"flex\", \"justifyContent\":\"space-around\"}}>\n\t\t\t\t<div style={{\"width\":\"25%\"}}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Character 1</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Character 2</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Character 3</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\" checked/> Character 4</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Character 5</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<div style={{\"width\":\"50%\"}}>\n\t\t\t\t\t<form style={{\"display\":\"flex\",\"flexDirection\":\"column\"}}>\n\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t<input type=\"text\"/>\n\t\t\t\t\t\t<label>Server</label>\n\t\t\t\t\t\t<select>\n\t\t\t\t\t\t\t<option>Server 1</option>\n\t\t\t\t\t\t\t<option>Server 2</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<label>Description (Markdown compatible)</label>\n\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t<input type=\"submit\" value=\"Add Character\"/>\n\t\t\t\t\t\t<input type=\"button\" value=\"Delete Character\"/>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\n\nexport default class MyStoryIdeas extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>My Story Ideas</h1>\n\t\t\t<div style={{\"display\":\"flex\", \"justifyContent\":\"space-around\"}}>\n\t\t\t\t<div style={{\"width\":\"25%\"}}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Story 1</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Story 2</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Story 3</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\" checked/> Story 4</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Story 5</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<div style={{\"width\":\"50%\"}}>\n\t\t\t\t\t<form style={{\"display\":\"flex\",\"flexDirection\":\"column\"}}>\n\t\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t\t<input type=\"text\"/>\n\t\t\t\t\t\t<label>Character</label>\n\t\t\t\t\t\t<select>\n\t\t\t\t\t\t\t<option>Character 1 (Server 1)</option>\n\t\t\t\t\t\t\t<option>Character 1 (Server 2)</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<label>Description (Markdown compatible)</label>\n\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t<input type=\"submit\" value=\"Add Story Idea\"/>\n\t\t\t\t\t\t<input type=\"button\" value=\"Delete Story Idea\"/>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport interactionPlugin from '@fullcalendar/interaction'; // for selectable\nimport timeGridPlugin from '@fullcalendar/timegrid';\n\nimport './main.scss' // webpack must be configured to do this\n\nexport default class MyAvailability extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Set Availability</h1>\n\t\t\t<div style={{\"display\":\"flex\", \"justifyContent\":\"space-around\"}}>\n\t\t\t\t<div style={{\"width\":\"25%\"}}>\n\t\t\t\t\t<h2>My Servers</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Server 1</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Server 2</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Server 3</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\" checked/> Server 4</li>\n\t\t\t\t\t\t<li><input type=\"checkbox\"/> Server 5</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<div style={{\"width\":\"50%\"}}>\n\t\t\t\t\t<FullCalendar \n\t\t\t\t\tdefaultView=\"timeGridWeek\" \n\t\t\t\t\tslotDuration=\"00:15:00\"\n\t\t\t\t\tnowIndicator={true}\n\t\t\t\t\tselectable={true}\n\t\t\t\t\tplugins={[\n\t\t\t\t\t\ttimeGridPlugin,\n\t\t\t\t\t\tinteractionPlugin,\n\t\t\t\t\t]}\n\t\t\t\t\tevents={[\n\t\t\t\t\t\t{ title: 'event 1', date: '2019-08-23' },\n\t\t\t\t\t\t{ title: 'event 2', date: '2019-08-25' }\n\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\n\nimport MySchedule from './MySchedule'\nimport ConnectedServers from './ConnectedServers'\nimport MyCharacters from './MyCharacters';\nimport MyStoryIdeas from './MyStoryIdeas';\nimport MyAvailability from './MyAvailability';\n\nexport default class App extends React.Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\t\"section\":\"\"\n\t\t}\n\t\tthis.setSection=this.setSection.bind(this)\n\t}\n\n\tsetSection(e,section){\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\t\"section\":section\n\t\t})\n\t}\n\n\trender() {\n\t\tlet displayedSection\n\t\tswitch(this.state.section){\n\t\t\tcase \"MyAvailability\":\n\t\t\t\tdisplayedSection = (<MyAvailability/>)\n\t\t\t\tbreak;\n\t\t\tcase \"ConnectedServers\":\n\t\t\t\tdisplayedSection = (<ConnectedServers/>)\n\t\t\t\tbreak;\n\t\t\tcase \"MySchedule\":\n\t\t\t\tdisplayedSection = (<MySchedule/>)\n\t\t\t\tbreak;\n\t\t\tcase \"MyCharacters\":\n\t\t\t\tdisplayedSection = (<MyCharacters/>)\n\t\t\t\tbreak;\n\t\t\tcase \"MyStoryIdeas\":\n\t\t\t\tdisplayedSection = (<MyStoryIdeas/>)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tdisplayedSection = (<div>Hi, tester! Go ahead and click around.\n\t\t\t\t\t This is a tool to help you schedule Roleplaying sessions! \n\t\t\t\t\t You can add your characters, story ideas, and list your available timeslots.<br/>\n\t\t\t\t\t <strong>At the moment, nothing is functional. This is purely display.</strong>\n\t\t\t\t\t </div>)\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (\n\t\t\t<div style={{\"width\":\"75%\",\"marginLeft\":\"auto\",\"marginRight\":\"auto\"}}>\n\t\t\t\t<menu style={{\"display\":\"flex\",\"justifyContent\":\"space-around\"}}>\n\t\t\t\t\t<li><button onClick={(e)=> this.setSection(e,'MyAvailability')}>My Availability</button></li>\n\t\t\t\t\t<li><button onClick={(e)=> this.setSection(e,'ConnectedServers')}>Connected Servers</button></li>\n\t\t\t\t\t<li><button onClick={(e)=> this.setSection(e,'MySchedule')}>My Schedule</button></li>\n\t\t\t\t\t<li><button onClick={(e)=> this.setSection(e,'MyCharacters')}>My Characters</button></li>\n\t\t\t\t\t<li><button onClick={(e)=> this.setSection(e,'MyStoryIdeas')}>My Story Ideas</button></li>\n\t\t\t\t</menu>\n\t\t\t\t{displayedSection}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}