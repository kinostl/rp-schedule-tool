{"version":3,"sources":["Calendar.js","ConnectedServers.js","components/MyCharacters/new.js","components/MyCharacters/edit.js","MyCharacters.js","components/MyStoryIdeas/new.js","components/MyStoryIdeas/edit.js","MyStoryIdeas.js","MyAvailability.js","App.js","Loading.js","serviceWorker.js","index.js"],"names":["Calendar","React","forwardRef","props","ref","defaultView","header","left","center","right","editable","nowIndicator","themeSystem","plugins","dayGridPlugin","timeGridPlugin","bootstrapPlugin","listPlugin","interactionPlugin","ConnectedServers","state","this","api","get","then","res","serverRes","data","servers","server_names","server","setState","prevProps","prevState","snapshot","loading_events","filterId","params","Object","entries","key","console","log","events","length","nameString","map","event","UserId","concat","ServerId","join","names","temp_names","name","start","end","title","extendedProps","User","Server","checkBoxes","val","push","checked","onChange","e","type","style","eventClick","eventProps","characters","character_ids","character","id","stories","selected_event","character_stories","filter","story","CharacterId","character_story_rows","character_story","className","description","character_story_list","Component","NewMyCharacters","initialValues","onSubmit","values","setSubmitting","resetForm","post","onCreate","isSubmitting","component","value","disabled","EditMyCharacters","delete","onDelete","enableReinitialize","put","onEdit","onClick","MyCharacters","refreshCharacters","handleDelete","clearEditCharacter","setEditCharacter","characterId","axios","all","spread","loading","editCharacter","charId","NewMyStories","class","role","EditMyStories","MyStoryIdeas","refreshStories","clearEditStory","setEditStory","storyId","editStory","MyAvailability","getConflicts","newEvent","handleConflict","eventInNewEvent","startsInEvent","endsInEvent","remove","makeNewEvent","setEnd","setStart","handleEvent","calApi","calRef","current","getApi","getEvents","allDay","createdEvent","addEvent","setProp","setExtendedProp","handleRemove","selected_range","handleResize","info","handleDrop","handleAdd","createRef","target","saveStatus","getUnix","timestamp","Math","round","getTime","selectable","allDaySlot","select","selectInfo","eventResize","eventDrop","App","setSection","bind","section","preventDefault","user","window","localStorage","removeItem","document","location","replace","process","href","Loading","Boolean","hostname","match","ReactDOM","render","getElementById","hash","token","substr","setItem","getItem","create","baseURL","timeout","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c89ce29.chunk.js","sourcesContent":["import React from 'react'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listPlugin from '@fullcalendar/list'\nimport interactionPlugin from '@fullcalendar/interaction'; // for selectable\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\n\nimport './main.scss' // webpack must be configured to do this\n\nconst Calendar = React.forwardRef((props, ref) => (\n    < FullCalendar\n        {...props}\n        ref={ref}\n        defaultView={props.defaultView || \"dayGridMonth\"}\n        header={{\n            left: 'prev,next today',\n            center: 'title',\n            right: props.editable?'timeGridWeek,timeGridDay':'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n        }}\n        nowIndicator={true}\n        themeSystem='bootstrap'\n        plugins={\n            [\n                dayGridPlugin,\n                timeGridPlugin,\n                bootstrapPlugin,\n                listPlugin,\n                interactionPlugin,\n            ]} />))\n\nexport default Calendar\n","import React from 'react'\n\nimport Calendar from './Calendar';\n\nexport default class ConnectedServers extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\t\"servers\": {},\n\t\t\t\"server_names\": {},\n\t\t\t\"selected_event\": (<span>No event selected</span>),\n\t\t\t\"loading\": true,\n\t\t\t\"loading_events\": false,\n\t\t\t\"events\": [],\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.api.get('/servers').then((res) => {\n\t\t\tlet serverRes = res.data['records']\n\t\t\tlet servers = {}\n\t\t\tlet server_names = {}\n\t\t\tfor (let server of serverRes) {\n\t\t\t\tservers[server['id']] = false\n\t\t\t\tserver_names[server['id']] = server['name']\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\t\"loading\": false,\n\t\t\t\t\"servers\": servers,\n\t\t\t\t\"server_names\": server_names\n\t\t\t})\n\n\t\t})\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif (prevState.loading_events !== this.state.loading_events) {\n\t\t\tlet filterId = 1\n\t\t\tlet params = {}\n\t\t\tfor (let [key, value] of Object.entries(this.state.servers)) {\n\t\t\t\tif (value) {\n\t\t\t\t\tconsole.log(\"value\", key)\n\t\t\t\t\tparams[`filter${filterId}`] = `ServerId,eq,${key}`\n\t\t\t\t\tfilterId = filterId + 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filterId > 1) {\n\t\t\t\tthis.props.api.get('/events', { params: params }).then((res) => {\n\t\t\t\t\tlet events = res.data['records']\n\t\t\t\t\tif(events.length>0){\n\t\t\t\t\t\tlet nameString = events.map((event) => event.UserId).concat(events.map((event) => event.ServerId)).join(\",\")\n\t\t\t\t\t\tthis.props.api.get(`/names/${nameString}`).then((names) => {\n\t\t\t\t\t\t\tlet temp_names = names.data\n\t\t\t\t\t\t\tnames = {}\n\t\t\t\t\t\t\tfor (const name of temp_names) {\n\t\t\t\t\t\t\t\tnames[name['id']] = name['name']\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tevents = events.map((event) => ({\n\t\t\t\t\t\t\t\tstart: event.start * 1000,\n\t\t\t\t\t\t\t\tend: event.end * 1000,\n\t\t\t\t\t\t\t\ttitle: `${names[event.ServerId]} with ${names[event.UserId]}`,\n\t\t\t\t\t\t\t\textendedProps: {\n\t\t\t\t\t\t\t\t\tUser: names[event.UserId],\n\t\t\t\t\t\t\t\t\tServer: names[event.ServerId],\n\t\t\t\t\t\t\t\t\tServerId: event.ServerId,\n\t\t\t\t\t\t\t\t\tUserId: event.UserId\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\"loading_events\": false,\n\t\t\t\t\t\t\t\t\"selected_event\": (<span>No event selected</span>),\n\t\t\t\t\t\t\t\t\"events\": events\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\"loading_events\": false,\n\t\t\t\t\t\t\t\"selected_event\": (<span>No event selected</span>),\n\t\t\t\t\t\t\t\"events\": []\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\t\"loading_events\": false,\n\t\t\t\t\t\"selected_event\": (<span>No event selected</span>),\n\t\t\t\t\t\"events\":[]\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tlet checkBoxes = []\n\t\tfor (const key in this.state.servers) {\n\t\t\tconst val = this.state.servers[key]\n\t\t\tconst name = this.state.server_names[key]\n\n\t\t\tcheckBoxes.push(<li key={key}>\n\t\t\t\t<input checked={val} onChange={(e) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\"servers\": {\n\t\t\t\t\t\t\t...this.state.servers,\n\t\t\t\t\t\t\t[key]: !this.state.servers[key]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"loading_events\": true,\n\t\t\t\t\t})\n\t\t\t\t}} type=\"checkbox\" /> {name}\n\t\t\t</li>)\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Connected Servers</h1>\n\t\t\t\t<strong>Players with events this week</strong>\n\t\t\t\t<div style={{ \"display\": \"flex\", \"justifyContent\": \"space-around\" }}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ul style={{ \"listStyle\": \"none\" }}>\n\t\t\t\t\t\t\t{checkBoxes}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ \"width\": \"50%\" }}>\n\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\tdefaultView=\"listWeek\"\n\t\t\t\t\t\t\teventClick={(e) => {\n\t\t\t\t\t\t\t\tlet eventProps = e.event.extendedProps\n\t\t\t\t\t\t\t\tthis.props.api.get(`/characters?filter=UserId,eq,${eventProps.UserId}&filter=ServerId,eq,${eventProps.ServerId}`).then((characters) => {\n\t\t\t\t\t\t\t\t\tcharacters = characters.data['records']\n\t\t\t\t\t\t\t\t\tlet character_ids = characters.map((character) => character.id)\n\t\t\t\t\t\t\t\t\tlet filterId = 1\n\t\t\t\t\t\t\t\t\tlet params = {}\n\t\t\t\t\t\t\t\t\tfor (let id of character_ids) {\n\t\t\t\t\t\t\t\t\t\tparams[`filter${filterId}`] = `CharacterId,eq,${id}`\n\t\t\t\t\t\t\t\t\t\tfilterId = filterId + 1\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.props.api.get(`/stories`, { params: params }).then((stories) => {\n\t\t\t\t\t\t\t\t\t\tstories = stories.data['records']\n\t\t\t\t\t\t\t\t\t\tlet selected_event = [(<strong>{eventProps.User}'s characters and stories on {eventProps.Server}</strong>)]\n\t\t\t\t\t\t\t\t\t\tfor (let character of characters) {\n\t\t\t\t\t\t\t\t\t\t\tlet character_stories = stories.filter((story) => story.CharacterId === character.id)\n\t\t\t\t\t\t\t\t\t\t\tlet character_story_rows = []\n\t\t\t\t\t\t\t\t\t\t\tfor (let character_story of character_stories) {\n\t\t\t\t\t\t\t\t\t\t\t\tcharacter_story_rows.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{character_story.name}</strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{character_story.description}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tlet character_story_list\n\t\t\t\t\t\t\t\t\t\t\tif (character_story_rows.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tcharacter_story_list = (<ul className=\"list-group list-group-flush\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{character_story_rows}\n\t\t\t\t\t\t\t\t\t\t\t\t</ul>)\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tselected_event.push(\n\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-header\">{character.name}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">{character.description}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{character_story_list}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tselected_event: selected_event\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tevents={this.state.events}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{this.state.selected_event}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\n\nexport default class NewMyCharacters extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\t'name': '',\n\t\t\t\t\t'ServerId': this.props.servers[0].id,\n\t\t\t\t\t'description': '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values, { setSubmitting, resetForm }) => {\n\t\t\t\t\tthis.props.api.post('/characters', {\n\t\t\t\t\t\t...values,\n\t\t\t\t\t}).then((res) => {\n\t\t\t\t\t\tthis.props.onCreate()\n\t\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\t\tresetForm()\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ isSubmitting }) => (\n\t\t\t\t\t<Form style={{ \"display\": \"flex\", \"flexDirection\": \"column\" }}>\n\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t<Field className=\"form-control\" type=\"text\" name=\"name\" />\n\t\t\t\t\t\t<label>Server</label>\n\t\t\t\t\t\t<Field component=\"select\" name=\"ServerId\" className=\"custom-select\">\n\t\t\t\t\t\t\t{this.props.servers.map((server) => (\n\t\t\t\t\t\t\t\t<option value={server.id}>{server.name}</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<label>Description (Markdown compatible)</label>\n\t\t\t\t\t\t<Field type=\"textarea\" name=\"description\" className=\"form-control\" />\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Add Character</button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\n\nexport default class EditMyCharacters extends React.Component {\n\tonDelete(value){\n\t\tthis.props.api.delete(`/characters/${value}`).then((res) => {\n\t\t\tthis.props.onDelete()\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\t'name': this.props.character.name,\n\t\t\t\t\t'ServerId': this.props.character.ServerId,\n\t\t\t\t\t'description': this.props.character.description,\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\tthis.props.api.put(`/characters/${this.props.character.id}`, values).then((res) => {\n\t\t\t\t\t\tthis.props.onEdit()\n\t\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ isSubmitting }) => (\n\t\t\t\t\t<Form style={{ \"display\": \"flex\", \"flexDirection\": \"column\" }}>\n\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t<Field className=\"form-control\" type=\"text\" name=\"name\" />\n\t\t\t\t\t\t<label>Server</label>\n\t\t\t\t\t\t<Field component=\"select\" name=\"ServerId\" className=\"custom-select\">\n\t\t\t\t\t\t\t{this.props.servers.map((server) => (\n\t\t\t\t\t\t\t\t<option value={server.id}>{server.name}</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<label>Description (Markdown compatible)</label>\n\t\t\t\t\t\t<Field type=\"textarea\" name=\"description\" className=\"form-control\" />\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Save Character</button>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={()=>{this.onDelete(this.props.character.id)}} disabled={isSubmitting}>Delete Character</button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport axios from 'axios'\nimport NewMyCharacters from './components/MyCharacters/new';\nimport EditMyCharacters from './components/MyCharacters/edit';\n\nexport default class MyCharacters extends React.Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\t\"loading\":true,\n\t\t\t\"editCharacter\": null,\n\t\t\t\"characters\":[],\n\t\t\t\"servers\":[]\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\taxios.all([\n\t\t\tthis.props.api.get('/characters'),\n\t\t\tthis.props.api.get('/servers')\n\t\t]).then(axios.spread((characters, servers)=>{\n\t\t\tthis.setState({\n\t\t\t\t\"loading\":false,\n\t\t\t\t\"characters\":characters.data['records'],\n\t\t\t\t\"servers\":servers.data['records']\n\t\t\t})\n\t\t}))\n\t}\n\n\trefreshCharacters = () => {\n\t\tthis.props.api.get('/characters')\n\t\t.then((res)=>{\n\t\t\tthis.setState({\n\t\t\t\t\"characters\":res.data['records']\n\t\t\t})\n\t\t})\n\t}\n\n\thandleDelete = () => {\n\t\tthis.refreshCharacters()\n\t\tthis.clearEditCharacter()\n\t}\n\n\tclearEditCharacter = () => {\n\t\tthis.setState({\n\t\t\t\"editCharacter\":null\n\t\t})\n\t}\n\n\tsetEditCharacter = (characterId) => {\n\t\tlet character = this.state.characters[characterId]\n\t\tthis.setState({\n\t\t\t\"editCharacter\": character\n\t\t})\n\t}\n\n\trender() {\n\t\tif(this.state.loading){\n\t\t\treturn <div>Loading</div>\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>My Characters</h1>\n\t\t\t\t<div style={{ \"display\": \"flex\", \"justifyContent\": \"space-around\" }}>\n\t\t\t\t\t<div className=\"list-group\">\n\t\t\t\t\t\t<button className={\n\t\t\t\t\t\t\tthis.state.editCharacter ?\n\t\t\t\t\t\t\t\t\"list-group-item list-group-item-action\" :\n\t\t\t\t\t\t\t\t\"list-group-item list-group-item-action active\"\n\t\t\t\t\t\t} onClick={() => { this.clearEditCharacter() }}>Add New Character</button>\n\t\t\t\t\t\t{this.state.characters.map((character, charId) => (\n\t\t\t\t\t\t\t<button className={\n\t\t\t\t\t\t\t\tthis.state.editCharacter === character ?\n\t\t\t\t\t\t\t\t\t\"list-group-item list-group-item-action active\" :\n\t\t\t\t\t\t\t\t\t\"list-group-item list-group-item-action\"\n\t\t\t\t\t\t\t} key={character.id} onClick={() => { this.setEditCharacter(charId) }}>{character.name}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ \"width\": \"50%\" }}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.editCharacter ?\n\t\t\t\t\t\t\t\t<EditMyCharacters servers={this.state.servers} api={this.props.api} character={this.state.editCharacter} onEdit={this.refreshCharacters} onDelete={this.handleDelete} />\n\t\t\t\t\t\t\t\t: <NewMyCharacters servers={this.state.servers} api={this.props.api} onCreate={this.refreshCharacters} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\n\nexport default class NewMyStories extends React.Component {\n\trender() {\n\t\tif (this.props.characters[0]) {\n\t\t\treturn (\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t'name': '',\n\t\t\t\t\t\t'CharacterId': this.props.characters[0].id,\n\t\t\t\t\t\t'description': '',\n\t\t\t\t\t}}\n\t\t\t\t\tonSubmit={(values, { setSubmitting, resetForm }) => {\n\t\t\t\t\t\tthis.props.api.post('/stories', {\n\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t}).then((res) => {\n\t\t\t\t\t\t\tthis.props.onCreate()\n\t\t\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ isSubmitting }) => (\n\t\t\t\t\t\t<Form style={{ \"display\": \"flex\", \"flexDirection\": \"column\" }}>\n\t\t\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t\t\t<Field className=\"form-control\" type=\"text\" name=\"name\" />\n\t\t\t\t\t\t\t<label>Character</label>\n\t\t\t\t\t\t\t<Field component=\"select\" name=\"CharacterId\" className=\"custom-select\">\n\t\t\t\t\t\t\t\t{this.props.characters.map((character) => (\n\t\t\t\t\t\t\t\t\t<option value={character.id}>{character.name}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<label>Description (Markdown compatible)</label>\n\t\t\t\t\t\t\t<Field type=\"textarea\" name=\"description\" className=\"form-control\" />\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Add Story</button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div class=\"alert alert-warning\" role=\"alert\">You need characters before you can make stories!</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\n\nexport default class EditMyStories extends React.Component {\n\tonDelete(value){\n\t\tthis.props.api.delete(`/stories/${value}`).then((res) => {\n\t\t\tthis.props.onDelete()\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Formik\n\t\t\t\tenableReinitialize\n\t\t\t\tinitialValues={{\n\t\t\t\t\t'name': this.props.story.name,\n\t\t\t\t\t'CharacterId': this.props.story.CharacterId,\n\t\t\t\t\t'description': this.props.story.description,\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\tthis.props.api.put(`/stories/${this.props.story.id}`, values).then((res) => {\n\t\t\t\t\t\tthis.props.onEdit()\n\t\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ isSubmitting }) => (\n\t\t\t\t\t<Form style={{ \"display\": \"flex\", \"flexDirection\": \"column\" }}>\n\t\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t\t<Field className=\"form-control\" type=\"text\" name=\"name\" />\n\t\t\t\t\t\t<label>Character</label>\n\t\t\t\t\t\t<Field component=\"select\" name=\"CharacterId\" className=\"custom-select\">\n\t\t\t\t\t\t\t{this.props.characters.map((character) => (\n\t\t\t\t\t\t\t\t<option value={character.id}>{character.name}</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<label>Description (Markdown compatible)</label>\n\t\t\t\t\t\t<Field type=\"textarea\" name=\"description\" className=\"form-control\" />\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Save Story</button>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-danger\" onClick={()=>{this.onDelete(this.props.story.id)}} disabled={isSubmitting}>Delete Story</button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport axios from 'axios'\nimport NewMyStories from './components/MyStoryIdeas/new'\nimport EditMyStories from './components/MyStoryIdeas/edit'\n\nexport default class MyStoryIdeas extends React.Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\t\"loading\":true,\n\t\t\t\"editStory\": null,\n\t\t\t\"stories\":[],\n\t\t\t\"characters\":[]\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\taxios.all([\n\t\t\tthis.props.api.get('/stories'),\n\t\t\tthis.props.api.get('/characters')\n\t\t]).then(axios.spread((stories, characters)=>{\n\t\t\tthis.setState({\n\t\t\t\t\"loading\":false,\n\t\t\t\t\"stories\":stories.data['records'],\n\t\t\t\t\"characters\":characters.data['records'],\n\t\t\t})\n\t\t}))\n\t}\n\n\trefreshStories = () => {\n\t\tthis.props.api.get('/stories')\n\t\t.then((res)=>{\n\t\t\tthis.setState({\n\t\t\t\t\"stories\":res.data['records']\n\t\t\t})\n\t\t})\n\t}\n\n\thandleDelete = () => {\n\t\tthis.refreshStories()\n\t\tthis.clearEditStory()\n\t}\n\n\tclearEditStory = () => {\n\t\tthis.setState({\n\t\t\t\"editStory\":null\n\t\t})\n\t}\n\n\tsetEditStory = (storyId) => {\n\t\tlet story = this.state.stories[storyId]\n\t\tthis.setState({\n\t\t\t\"editStory\": story\n\t\t})\n\t}\n\n\trender() {\n\t\tif(this.state.loading){\n\t\t\treturn <div>Loading</div>\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>My Story Ideas</h1>\n\t\t\t\t<div style={{ \"display\": \"flex\", \"justifyContent\": \"space-around\" }}>\n\t\t\t\t\t<div className=\"list-group\">\n\t\t\t\t\t\t<button className={\n\t\t\t\t\t\t\tthis.state.editStory ?\n\t\t\t\t\t\t\t\t\"list-group-item list-group-item-action\" :\n\t\t\t\t\t\t\t\t\"list-group-item list-group-item-action active\"\n\t\t\t\t\t\t} onClick={() => { this.clearEditStory() }}>Add New Story</button>\n\t\t\t\t\t\t{this.state.stories.map((story, storyId) => (\n\t\t\t\t\t\t\t<button className={\n\t\t\t\t\t\t\t\tthis.state.editStory === story ?\n\t\t\t\t\t\t\t\t\t\"list-group-item list-group-item-action active\" :\n\t\t\t\t\t\t\t\t\t\"list-group-item list-group-item-action\"\n\t\t\t\t\t\t\t} key={story.id} onClick={() => { this.setEditStory(storyId) }}>{story.name}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ \"width\": \"50%\" }}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.editStory ?\n\t\t\t\t\t\t\t\t<EditMyStories characters={this.state.characters} api={this.props.api} story={this.state.editStory} onEdit={this.refreshStories} onDelete={this.handleDelete} />\n\t\t\t\t\t\t\t\t: <NewMyStories characters={this.state.characters} api={this.props.api} onCreate={this.refreshStories} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport Calendar from './Calendar'\n\nexport default class MyAvailability extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\t\"loading\":true,\n\t\t\t\"selected_range\": null,\n\t\t\t\"servers\":{},\n\t\t\t\"server_names\":{}\n\t\t}\n\t\tthis.calRef = React.createRef()\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.props.api.get('/servers').then((res)=>{\n\t\t\tlet serverRes = res.data['records']\n\t\t\tlet servers={}\n\t\t\tlet server_names={}\n\t\t\tfor(let server of serverRes){\n\t\t\t\tservers[server['id']]=false\n\t\t\t\tserver_names[server['id']]=server['name']\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\t\"loading\":false,\n\t\t\t\t\"saveStatus\":0,\n\t\t\t\t\"servers\":servers,\n\t\t\t\t\"server_names\":server_names\n\t\t\t})\n\n\t\t\treturn this.props.api.get('/events')\n\t\t}).then((res)=>{\n\t\t\tlet calApi = this.calRef.current.getApi()\n\t\t\tlet events = res.data['records']\n\t\t\tfor(const event of events){\n\t\t\t\tcalApi.addEvent({\n\t\t\t\t\tstart: event.start*1000,\n\t\t\t\t\tend: event.end*1000,\n\t\t\t\t\ttitle: this.state.server_names[event.ServerId],\n\t\t\t\t\textendedProps: {\n\t\t\t\t\t\t\"ServerId\": event.ServerId\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tgetConflicts = (newEvent, event) => {\n\t\tlet startsInEvent = ((newEvent.start >= event.start) && (newEvent.start <= event.end))\n\t\tlet endsInEvent = ((newEvent.end >= event.start) && (newEvent.end <= event.end))\n\t\tlet eventInNewEvent = ((newEvent.start <= event.start) && (newEvent.end >= event.end))\n\t\treturn [startsInEvent, endsInEvent, eventInNewEvent]\n\t}\n\n\thandleConflict = (event, newEvent, eventInNewEvent, startsInEvent, endsInEvent, remove) => {\n\t\tlet makeNewEvent = true\n\t\tif (eventInNewEvent) {\n\t\t\t\tif(!remove){\n\t\t\t\t\tmakeNewEvent = false\n\t\t\t\t\tevent.setEnd(newEvent.end)\n\t\t\t\t\tevent.setStart(newEvent.start)\n\t\t\t\t}else{\n\t\t\t\t\tevent.remove()\n\t\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (startsInEvent) {\n\t\t\t\tif (!remove) {\n\t\t\t\t\tmakeNewEvent = false\n\t\t\t\t\tevent.setEnd(newEvent.end)\n\t\t\t\t} else {\n\t\t\t\t\tevent.setEnd(newEvent.start)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (endsInEvent) {\n\t\t\t\tif (!remove) {\n\t\t\t\t\tmakeNewEvent = false\n\t\t\t\t\tevent.setStart(newEvent.start)\n\t\t\t\t} else {\n\t\t\t\t\tevent.setStart(newEvent.end)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(remove){\n\t\t\treturn false\n\t\t}\n\t\treturn makeNewEvent\n\t}\n\n\thandleEvent = (newEvent,remove) => {\n\t\tlet calApi = this.calRef.current.getApi()\n\t\tlet events = calApi.getEvents()\n\t\tlet makeNewEvent = {}\n\t\tif (!newEvent.extendedProps) {\n\t\t\tfor (const key in this.state.servers) {\n\t\t\t\tmakeNewEvent[key] = true\n\t\t\t}\n\t\t}\n\t\tfor (const event of events) {\n\t\t\tif (event.allDay === false) {\n\t\t\t\tlet [startsInEvent, endsInEvent, eventInNewEvent] = this.getConflicts(newEvent, event)\n\t\t\t\tif (newEvent.extendedProps) {\n\t\t\t\t\tif(newEvent.extendedProps.ServerId === event.extendedProps.ServerId){\n\t\t\t\t\t\tthis.handleConflict(event, newEvent, eventInNewEvent, startsInEvent, endsInEvent, remove)\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tfor (const key in this.state.servers) {\n\t\t\t\t\t\tconst val = this.state.servers[key]\n\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\tif(event.extendedProps.ServerId === key){\n\t\t\t\t\t\t\t\tmakeNewEvent[key] = this.handleConflict(event, newEvent, eventInNewEvent, startsInEvent, endsInEvent, remove)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(!remove){\n\t\t\tfor (const key in this.state.servers) {\n\t\t\t\tconst val = this.state.servers[key]\n\t\t\t\tif (val && makeNewEvent[key]) {\n\t\t\t\t\tlet createdEvent = calApi.addEvent(newEvent)\n\t\t\t\t\tcreatedEvent.setProp(\"title\", this.state.server_names[key])\n\t\t\t\t\tcreatedEvent.setExtendedProp(\"ServerId\", key)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.setState({\"selected_range\":null})\n\t}\n\n\thandleRemove = () => {\n\t\tif(this.state.selected_range){\n\t\t\tthis.handleEvent(this.state.selected_range, true)\n\t\t}\n\t}\n\n\thandleResize = (info) => {\n\t\tthis.handleEvent(info.event)\n\t}\n\n\thandleDrop = (info) => {\n\t\tthis.handleEvent(info.event)\n\t}\n\n\thandleAdd = () => {\n\t\tif(this.state.selected_range){\n\t\t\tthis.handleEvent(this.state.selected_range)\n\t\t}\n\t}\n\n\trender() {\n\t\tif(this.state.loading){\n\t\t\treturn <div>Loading</div>\n\t\t}\n\n\t\tlet checkBoxes = []\n\t\tfor(const key in this.state.servers){\n\t\t\tconst val = this.state.servers[key]\n\t\t\tconst name = this.state.server_names[key]\n\t\t\tcheckBoxes.push(<li key={key}>\n\t\t\t\t<input checked={val} onChange={(e) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\"servers\": {\n\t\t\t\t\t\t\t...this.state.servers,\n\t\t\t\t\t\t\t[key]: e.target.checked\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}} type=\"checkbox\" /> {name}\n\t\t\t</li>)\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Set Availability</h1>\n\t\t\t\t<div style={{ \"display\": \"flex\", \"justifyContent\": \"space-around\" }}>\n\t\t\t\t\t<div style={{ \"width\": \"25%\" }}>\n\t\t\t\t\t\t<h2>My Servers</h2>\n\t\t\t\t\t\t<ul style={{ \"listStyle\": \"none\" }}>\n\t\t\t\t\t\t\t{checkBoxes}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ \"width\": \"50%\" }}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t([\n\t\t\t\t\t\t\t\t(<div>&nbsp;</div>),\n\t\t\t\t\t\t\t\t(<div>Saving...</div>),\n\t\t\t\t\t\t\t\t(<div>Saved</div>)\n\t\t\t\t\t\t\t])[this.state.saveStatus]\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className=\"form-group\" style={{ \"display\": \"flex\", \"justifyContent\": \"space-around\" }}>\n\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={this.handleAdd}>Available</button>\n\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={this.handleRemove}>Unavailable</button>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={() => {\n\t\t\t\t\t\t\t\tlet calApi = this.calRef.current.getApi()\n\t\t\t\t\t\t\t\tlet events = calApi.getEvents()\n\t\t\t\t\t\t\t\tlet getUnix = (timestamp)=>Math.round(timestamp.getTime() / 1000)\n\t\t\t\t\t\t\t\tevents = events.map((event) => ({\n\t\t\t\t\t\t\t\t\t\"start\": getUnix(event.start),\n\t\t\t\t\t\t\t\t\t\"end\": getUnix(event.end),\n\t\t\t\t\t\t\t\t\t\"ServerId\":event.extendedProps.ServerId\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\"saveStatus\":1\n\t\t\t\t\t\t\t\t},()=>{\n\t\t\t\t\t\t\t\t\t\tthis.props.api.post('/events', events).then((res) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\"saveStatus\":2\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\tref={this.calRef}\n\t\t\t\t\t\t\tdefaultView=\"timeGridWeek\"\n\t\t\t\t\t\t\tselectable={true}\n\t\t\t\t\t\t\teditable={true}\n\t\t\t\t\t\t\tallDaySlot={false}\n\t\t\t\t\t\t\tselect={(selectInfo) => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\"selected_range\": selectInfo\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\teventResize={this.handleResize}\n\t\t\t\t\t\t\teventDrop={this.handleDrop}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n","import React from 'react'\n\nimport ConnectedServers from './ConnectedServers'\nimport MyCharacters from './MyCharacters';\nimport MyStoryIdeas from './MyStoryIdeas';\nimport MyAvailability from './MyAvailability';\n\nexport default class App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\t\"section\": \"\"\n\t\t}\n\t\tthis.setSection = this.setSection.bind(this)\n\t}\n\n\tsetSection(e, section) {\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\t\"section\": section\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tthis.props.user ? (\n\t\t\t\t\t\t<menu style={{ \"display\": \"flex\", \"justifyContent\": \"space-around\", \"listStyle\": \"none\" }}>\n\t\t\t\t\t\t\t<li><button className=\"btn btn-secondary\" onClick={(e) => this.setSection(e, 'MyAvailability')}>My Availability</button></li>\n\t\t\t\t\t\t\t<li><button className=\"btn btn-secondary\" onClick={(e) => this.setSection(e, 'ConnectedServers')}>Connected Servers</button></li>\n\t\t\t\t\t\t\t<li><button className=\"btn btn-secondary\" onClick={(e) => this.setSection(e, 'MyCharacters')}>My Characters</button></li>\n\t\t\t\t\t\t\t<li><button className=\"btn btn-secondary\" onClick={(e) => this.setSection(e, 'MyStoryIdeas')}>My Story Ideas</button></li>\n\t\t\t\t\t\t\t<li><button class=\"btn btn-secondary\" onClick={(e) => {\n\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\twindow.localStorage.removeItem('token')\n\t\t\t\t\t\t\t\tdocument.location.replace(process.env.REACT_APP_CLIENT_URL)\n\t\t\t\t\t\t\t}}>Logout</button></li>\n\t\t\t\t\t\t</menu>\n\t\t\t\t\t) : null\n\t\t\t\t}\n\t\t\t\t<div class=\"mx-5\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.user ? ((() => {\n\t\t\t\t\t\t\tswitch (this.state.section) {\n\t\t\t\t\t\t\t\tcase \"MyAvailability\":\n\t\t\t\t\t\t\t\t\treturn (<MyAvailability api={this.props.api} />)\n\t\t\t\t\t\t\t\tcase \"ConnectedServers\":\n\t\t\t\t\t\t\t\t\treturn (<ConnectedServers api={this.props.api} />)\n\t\t\t\t\t\t\t\tcase \"MyCharacters\":\n\t\t\t\t\t\t\t\t\treturn (<MyCharacters api={this.props.api} />)\n\t\t\t\t\t\t\t\tcase \"MyStoryIdeas\":\n\t\t\t\t\t\t\t\t\treturn (<MyStoryIdeas api={this.props.api} />)\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class=\"jumbotron text-center\">\n\t\t\t\t\t\t\t\t\t\t\t<h1 class=\"display-4\">RP Scheduler</h1>\n\t\t\t\t\t\t\t\t\t\t\t<p class=\"lead\">A tool to help you schedule Roleplaying sessions!</p>\n\t\t\t\t\t\t\t\t\t\t\t<hr class=\"my-4\" />\n\t\t\t\t\t\t\t\t\t\t\t<p>You can add your characters, story ideas, and list your available timeslots.</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>All your entries are siloed to individual Discord servers.</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>List your availability with My Ability</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>See events on your servers with Connected Servers</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>List your characters with My Characters</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>List your story ideas with My Stories Ideas</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>Your Story Ideas and Characters will appear under Connected Servers for all users you share a server with.</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})())\n\t\t\t\t\t\t\t: (<div class=\"jumbotron mt-5 text-center\">\n\t\t\t\t\t\t\t\t<h1 class=\"display-4\">RP Scheduler</h1>\n\t\t\t\t\t\t\t\t<p class=\"lead\">A tool to help you schedule Roleplaying sessions!</p>\n\t\t\t\t\t\t\t\t<hr class=\"my-4\" />\n\t\t\t\t\t\t\t\t<p>You can add your characters, story ideas, and list your available timeslots.</p>\n\t\t\t\t\t\t\t\t<p>All your entries are siloed to individual Discord servers.</p>\n\t\t\t\t\t\t\t\t<a class=\"btn btn-primary btn-lg\" href={`${process.env.REACT_APP_API_URL}/login`}>Login using Discord!</a>\n\t\t\t\t\t\t\t</div>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from 'react'\n\nexport default class Loading extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{ \"width\": \"75%\", \"marginLeft\": \"auto\", \"marginRight\": \"auto\" }}>\n\t\t\t\tLoading...\n\t\t\t</div>\n\t\t)\n\t}\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport Loading from './Loading'\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap'\nimport axios from 'axios'\n\nReactDOM.render(<Loading />, document.getElementById('root'));\nif (window.location.hash.length > 0) {\n    let token = \"Bearer \" + window.location.hash.substr(1)\n    window.localStorage.setItem('token', token)\n    document.location.replace(process.env.REACT_APP_CLIENT_URL)\n} else if (window.localStorage.getItem('token')) {\n    let token = window.localStorage.getItem('token')\n    axios.get(`${process.env.REACT_APP_API_URL}/api/records/me`, {\n        'headers': {\n            'X-Authorization': token\n        }\n    }).then((user) => {\n        const api = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/api/records`,\n            'headers': {\n                'X-Authorization': token\n            },\n            timeout: 3000,\n        });\n        ReactDOM.render(<App api={api} user={user.data} />, document.getElementById('root'));\n    })\n} else {\n    const api = axios.create({\n        baseURL: `${process.env.REACT_APP_API_URL}/api/records`,\n        timeout: 3000,\n    });\n    ReactDOM.render(<App api={api} />, document.getElementById('root'));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}